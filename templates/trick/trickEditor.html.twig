{% extends "base.html.twig" %}

{% block title %}Editeur{% endblock %}

{% block stylesheets %}
    <link rel="stylesheet" href="/css/trick_editor.css">
    <style>
        .close, .close:hover {
            color: #2C3E50;
        }
    </style>
{% endblock %}

{% block header %}
    <header>
        {% if editMode %}
            <h1>Modification d'un trick</h1>
        {% else %}
            <h1>Création d'un trick de foufou</h1>
        {% endif %}
    </header>
{% endblock %}

{% block body %}

    {% if editMode %}
        <div class="mb-4"><a class="btn btn-primary" href="{{ path("trick_show", {"slug": slug}) }}">Annuler</a></div>
    {% endif %}

    {{ form_start(trickForm) }}

    {{ form_row(trickForm.name, {
        "label": "Nom",
        "attr": {
            "placeholder": "Nom du trick"
        }
    }) }}

    {{ form_row(trickForm.description, {
        "label": "Description",
        "attr": {
            "placeholder": "Description"
        }
    }) }}

    {{ form_row(trickForm.trickGroups, {
        "label": "Groupe",
        "attr": {
            "placeholder": "Groupe"
        }
    }) }}

    <hr>

    <div class="media-inputs-wrapper mb-2">
        <label for="">Images</label>
        <div>
            <label class="btn btn-secondary" for="image_upload">Charger une image</label>
            <input class="d-none" id="image_upload" name="image_upload" type="file">
        </div>

        <div class="mb-2">
            <button class="btn btn-secondary" type="button" onclick="myTrickEditor.addInput('trick_images')">Entrer une adresse</button>
        </div>

        {{ form_errors(trickForm.images) }}
        {{ form_widget(trickForm.images) }}

        <div id="image-manager-message" class="d-none">Chargement...</div>

        <div id="image-library"></div>

        {{ form_row(trickForm.mainImage, {
            "label": "Entrez l'adresse de l'image principale ou cliquez sur une image que vous avez chargé",
            "attr": {
                "placeholder": "Adresse : https://url.de.ma.superbe.image"
            }
        }) }}
    </div>

    <hr>

    <div class="media-inputs-wrapper">
        <label for="">Vidéos YouTube</label>
        {{ form_errors(trickForm.videos) }}
        {{ form_widget(trickForm.videos) }}

        <button class="btn btn-secondary" type="button" onclick="myTrickEditor.addInput('trick_videos')">Ajouter une adresse</button>
    </div>

    <hr>

    <button type="submit" class="btn btn-success mb-4">
        {% if editMode %}
            Enregistrer les modifications
        {% else %}
            Ajouter le trick
        {% endif %}
    </button>

    {{ form_end(trickForm) }}

{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script src="/js/image.js"></script>
    <script>
        // Image manager

        let imageManager = new ImageManager("{{ path("image_upload") }}", "{{ path("image_delete") }}", document.getElementById("image_upload"));

        imageManager.init();

        // Image library

        let imageLibrary = new ImageLibrary(document.getElementById("image-library"), document.getElementById("trick_mainImage"), "main-image-selected"),
            imagesInputsElements = document.querySelectorAll('input[name*="trick[images]"]'),
            mainImageInputElement = document.getElementById("trick_mainImage");

        // Show images from inputs at loading
        let imageElt;

        for (let i = 0, size = imagesInputsElements.length; i < size; i++) {
            imageElt = imageLibrary.addImage(imagesInputsElements[i].value, imagesInputsElements[i]);
            if (mainImageInputElement.value.includes(imagesInputsElements[i].value)) {
                imageLibrary.setAsMainImage(imageElt);
            }
        }

        // Trick editor

        var myTrickEditor = {

            addDeleteButtons: function () {

                var imageInputElts = document.querySelectorAll('input[id*="trick_images_"]'),
                    videoInputElts = document.querySelectorAll('input[id*="trick_videos_"]');

                for (var imageInputElt of imageInputElts) {
                    myTrickEditor.addADeleteButton(imageInputElt.parentElement, imageInputElt.parentElement.parentElement.parentElement);
                }

                for (var videoInputElt of videoInputElts) {
                    myTrickEditor.addADeleteButton(videoInputElt.parentElement, videoInputElt.parentElement.parentElement.parentElement);
                }
            },

            addADeleteButton: function (parentElement, targetElement) {

                parentElement.appendChild(buildDeleteButton(targetElement));
                addBootstrapClasses(parentElement);

                function buildDeleteButton(targetElt) {

                    var btnElt = document.createElement("button"),
                        spanElt = document.createElement("span");

                    spanElt.setAttribute("aria-hidden", "true");
                    spanElt.textContent = "×";

                    btnElt.type = "button";
                    btnElt.classList.add("close");
                    btnElt.setAttribute("arial-label", "Close");

                    btnElt.appendChild(spanElt);

                    btnElt.addEventListener("click", function () {
                        myApp.elementTool.removeElement(targetElt);
                    });

                    return btnElt;
                }

                function addBootstrapClasses(parentElt) {

                    parentElt.classList.add('d-flex');
                    parentElt.children[0].classList.add('mr-3');
                    parentElt.children[1].classList.add('mr-3');
                }
            },

            /**
             * Add an input field
             *
             * @param wrapperId
             * @param hidden
             * @param placeholder
             * @returns {DOM Element} the input field
             */
            addInput: function (wrapperId, hidden = false, placeholder = null) {

                var wrapperElt = document.getElementById(wrapperId),
                    lastKey = wrapperElt.children.length,
                    newInputWrapperElt = buildNewInputWrapperElt(wrapperElt.getAttribute("data-prototype"), lastKey);

                wrapperElt.appendChild(newInputWrapperElt);

                var lastInput = getLastInput(wrapperElt, lastKey);

                if (placeholder) {
                    lastInput.placeholder = placeholder;
                }

                if (hidden) {
                    lastInput.parentElement.parentElement.parentElement.style.display = "none";
                    lastInput.type = "hidden";

                } else {
                    myTrickEditor.addADeleteButton(lastInput.parentElement, lastInput.parentElement.parentElement.parentElement);
                }

                return lastInput;

                /**
                 * Build a new input from a prototype
                 *
                 * @param prototype
                 * @param lastKey
                 * @returns {Element}
                 */
                function buildNewInputWrapperElt(prototype, lastKey) {

                    var elt = document.createElement('div');
                    elt.innerHTML = prototype.replace(/__name__/g, lastKey);

                    return elt.firstElementChild;
                }

                function getLastInput(wrapperElt, lastKey) {

                    return wrapperElt.children[lastKey].firstElementChild.firstElementChild.firstElementChild;
                }
            }
        };

        myTrickEditor.addDeleteButtons();
        // myTrickEditor.addInput("trick_images");
        myTrickEditor.addInput("trick_videos", false, "Adresse : https://url.de.ma.superbe.video");
    </script>
{% endblock %}